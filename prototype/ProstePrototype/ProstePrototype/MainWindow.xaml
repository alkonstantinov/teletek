<Window x:Class="ProstePrototype.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
		xmlns:wpf="clr-namespace:CefSharp.Wpf;assembly=CefSharp.Wpf" 
        xmlns:local="clr-namespace:ProstePrototype"
		xmlns:uc="clr-namespace:ProstePrototype.WpfControls"
		xmlns:library="clr-namespace:ProstePrototype.library"
        mc:Ignorable="d"
		Title="T-Manager 6.1" Height="768" Width="1024"
        WindowState="Normal"
		WindowStyle="None">
    <!-- WindowState="Maximized" -->

    <Window.CommandBindings>
        <CommandBinding Command="New" CanExecute="NewCommand_CanExecute" Executed="NewCommand_Executed" />
    </Window.CommandBindings>
    <Window.Resources>
        <uc:HalfValueConverter x:Key="HalfConverter"/>
        <uc:StringToUpperConverter x:Key="StringToUpperConverter"/>
        <!--#region ToolTip fontfamily-->
        <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
            <Setter Property="FontFamily" Value="{StaticResource poppins_regular}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <!--#endregion-->
        <!--<local:GridLengthConverter x:Key="gridLengthConverter" />-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#ffe7f1ff"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#ffe7f1ff"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF383838"/>
        <Style x:Key="ButtonShadow" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="5" Height="{TemplateBinding Height}" Margin="2, 0, 2, 0" 
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" 
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" 
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" 
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>-->
        <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#ffe9ecef"/>
        <!--<SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>-->
        <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
        <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
        <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF707070"/>
        <!--<SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>-->
        <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
        <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
        <SolidColorBrush x:Key="Menu.Static.Foreground" Color="#FF212121"/>
        <!-- For application on all the MenuItems use it as TargetType="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" inside the ControlTemplate below-->
        <ControlTemplate x:Key="MenuItemWithoutIcon" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="0"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" Background="{StaticResource MenuItem.Selected.Background}" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" Grid.Column="2" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
        <!--<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
        <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
            <Setter Property="ClickMode" Value="Hover"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
        <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
        <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
            <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" Grid.Row="1">
                                <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                            <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                                <RepeatButton.Visibility>
                                    <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                        <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </RepeatButton.Visibility>
                                <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                            </RepeatButton>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Background="{StaticResource Menu.Static.Background}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Visibility="Collapsed" Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                    <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="22" SnapsToDevicePixels="true">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="0"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Background="{StaticResource MenuItem.Highlight.Background}" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter Grid.Column="2" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Background="{StaticResource Menu.Static.Background}" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Visibility="Collapsed" Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
                </Trigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>-->
        
        
        <Style x:Key="FileStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Cursor" Value="Hand" />
            <!--<Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="{Binding Name}"/>
                        </StackPanel>
                    </ToolTip>
                </Setter.Value>
            </Setter>-->
            <Setter Property="Template" Value="{StaticResource MenuItemWithoutIcon}"/>
        </Style>
        <Style x:Key="FileMainStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="MenuItemBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" >
                            <Grid VerticalAlignment="Center">
                                <ContentPresenter Content="{TemplateBinding Header}" ContentSource="Header" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Popup AllowsTransparency="True" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PlacementTarget="{Binding ElementName=MenuItemBorder}"
									   HorizontalOffset="1" VerticalOffset="-1">
                                    <Border Background="{Binding ElementName=filePanel, Path=Background}" BorderThickness="0" BorderBrush="{StaticResource DefaultColor}" Padding="2, 5, 2, 5" CornerRadius="6" >
                                        <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip">
                <Setter.Value>
                    <ToolTip>
                        <StackPanel Orientation="Vertical" Typography.Capitals="AllSmallCaps">
                            <TextBlock Text="{DynamicResource MainMenuFile}" FontFamily="{StaticResource poppins_regular}"/>
                        </StackPanel>
                    </ToolTip>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Border BorderBrush="#8090aa" BorderThickness="0" CornerRadius="2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="60" />
                <RowDefinition Height="2" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid x:Name="mainGrid" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="280"/>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="76"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>

                    <Button x:Name="add_system_btn" Grid.Column="0" ToolTip="{DynamicResource MainMenuAddNew}" Height="40" Width="40" Click="New_Clicked" UseLayoutRounding="True" Margin="5, 0, 0, 0" Background="Transparent" BorderBrush="Transparent">
                        <Button.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource HalfConverter}}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Width" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource HalfValueConverter}}"/>
                                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource HalfValueConverter}}"/>
                                <Setter Property="Fill" Value="#0c63e4"/>
                            </Style>
                        </Button.Resources>
                        <Grid Background="Transparent">
                            <Grid Background="White" 
                                  Height="18" 
                                  Width="18"/>
                            <Viewbox>
                                <TextBlock Text="&#xe917;" FontFamily="{StaticResource ram_icons}" FontSize="40" Foreground="#0064ff" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                    </Button>

                    <Button x:Name="scan_btn" Grid.Column="1" Style="{StaticResource ButtonShadow}" BorderBrush="AntiqueWhite" BorderThickness="0.2"
                            Height="35" ToolTip="{DynamicResource MainMenuScan}" Click="Scan_Clicked" IsEnabled="False"
                            MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                        <DockPanel VerticalAlignment="Center">
                            <TextBlock x:Name="scan_icon" Text="&#xe900;" FontFamily="{StaticResource ram_icons}" FontSize="14" Margin="0, 0, 5, 0" />
                            <TextBlock Text="{library:DynamicResourceBinding MainMenuScan, Converter={StaticResource StringToUpperConverter}}" 
                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10" VerticalAlignment="Center"/>
                        </DockPanel>
                    </Button>

                    <Button x:Name="filePanel" Grid.Column="2" Style="{StaticResource ButtonShadow}" BorderThickness="0.2" BorderBrush="AntiqueWhite"
                            Height="35" MouseLeftButtonDown="mainPanel_MouseLeftButtonDown" VerticalAlignment="Center" Background="#FFDDDDDD"
                            MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                        <Menu x:Name="fileMenu" Height="35" VerticalAlignment="Center" Background="Transparent">
                            <Menu.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </Menu.ItemsPanel>
                            <MenuItem Style="{StaticResource FileMainStyle}">
                                <!--<MenuItem.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal" />
                                    </ItemsPanelTemplate>
                                </MenuItem.ItemsPanel>-->
                                <MenuItem.Header>
                                    <DockPanel>
                                        <TextBlock x:Name="file_icon" Text="&#xe901;" FontFamily="{StaticResource ram_icons}" FontSize="14" Margin="-5, 0, 5, 0" />
                                        <TextBlock Text="{library:DynamicResourceBinding MainMenuFile, Converter={StaticResource StringToUpperConverter}}" 
                                                   FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                                        <!--<TextBlock Text="&#xf0d7;" FontFamily="{StaticResource fa_solid}" FontSize="10" VerticalAlignment="Bottom" />-->
                                    </DockPanel>
                                </MenuItem.Header>
                                <MenuItem Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuNew}" 
                                          Click="NewSystem_Clicked">
                                    <!--<MenuItem.Header>
                                        <DockPanel>
                                            <TextBlock Text="&#xe4ee;" FontFamily="{StaticResource fa_solid}" FontSize="14" Margin="0, 0, 3, 0" />
                                            <TextBlock Text="{library:DynamicResourceBinding MainMenuNew, Converter={StaticResource StringToUpperConverter}}" 
                                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                                        </DockPanel>
                                    </MenuItem.Header>-->
                                </MenuItem>
                                <MenuItem Click="Open_Clicked" Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuOpen}"
                                          >
                                    <!--<MenuItem.Header>
                                        <DockPanel>
                                            <TextBlock Text="&#xf07c;" FontFamily="{StaticResource fa_solid}" FontSize="14" Margin="0, 0, 3, 0" />
                                            <TextBlock Text="{library:DynamicResourceBinding MainMenuOpen, Converter={StaticResource StringToUpperConverter}}" 
                                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                                        </DockPanel>
                                    </MenuItem.Header>-->
                                </MenuItem>
                                <MenuItem x:Name="mainMenuOpenTDF_btn" Click="OpenTDF_Clicked" Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuOpenTDF}"
                                          IsEnabled="False">
                                    <!--<MenuItem.Header>
                                        <DockPanel>
                                            <TextBlock Text="&#xf0c7;" FontFamily="{StaticResource fa_solid}" FontSize="14" Margin="0, 0, 3, 0" />
                                            <TextBlock Text="{library:DynamicResourceBinding MainMenuSave, Converter={StaticResource StringToUpperConverter}}" 
                                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                                        </DockPanel>
                                    </MenuItem.Header>-->
                                </MenuItem>
                                <MenuItem Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuSave}"
                                          >
                                    <!--<MenuItem.Header>
                                        <DockPanel>
                                            <TextBlock Text="&#xf0c7;" FontFamily="{StaticResource fa_solid}" FontSize="14" Margin="0, 0, 3, 0" />
                                            <TextBlock Text="{library:DynamicResourceBinding MainMenuSave, Converter={StaticResource StringToUpperConverter}}" 
                                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                                        </DockPanel>
                                    </MenuItem.Header>-->
                                </MenuItem>
                                <MenuItem Click="SaveAs_Clicked" Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuSaveas}"
                                          >
                                    <!--<MenuItem.Header>
                                        <DockPanel>
                                            <TextBlock Text="&#xf570;" FontFamily="{StaticResource fa_solid}" FontSize="14" Margin="0, 0, 3, 0"></TextBlock>
                                            <TextBlock Text="{library:DynamicResourceBinding MainMenuSaveas, Converter={StaticResource StringToUpperConverter}}" 
                                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                                        </DockPanel>
                                    </MenuItem.Header>-->
                                </MenuItem>
                                <MenuItem Click="ShowSystemLog_Clicked" Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuSystemLog}"/>
                                <MenuItem Click="ShowEventsLog_Clicked" Style="{StaticResource FileStyle}" Header="{DynamicResource MainMenuEventsLog}"/>
                            </MenuItem>
                        </Menu>
                    </Button>

                    <Button x:Name="write_btn" Grid.Column="3" Style="{StaticResource ButtonShadow}" BorderBrush="AntiqueWhite" BorderThickness="0.2" 
                            Height="35" ToolTip="{DynamicResource MainMenuWrite}" Click="Write_Clicked"
                            MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                        <DockPanel VerticalAlignment="Center">
                            <TextBlock x:Name="edit_icon" Text="&#xe902;" FontFamily="{StaticResource ram_icons}" FontSize="14" Margin="0, 0, 5, 0"></TextBlock>
                            <TextBlock Text="{library:DynamicResourceBinding MainMenuWrite, Converter={StaticResource StringToUpperConverter}}" 
                                       FontFamily="{StaticResource poppins_demibold}" FontSize="10"/>
                        </DockPanel>
                    </Button>

                </Grid>
                <GridSplitter Grid.Column="1" ResizeDirection="Rows" BorderBrush="#73a6e2" Background="LightGray" Width="1" Height="25"/>
                <Grid Grid.Column="2" MouseLeftButtonDown="mainPanel_MouseLeftButtonDown">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" x:Name="breadCrumbsField" VerticalAlignment="Center" Height="50">
                        <ListView x:Name="lvBreadCrumbs" Margin="20, 15, 20, 15" FontFamily="{StaticResource poppins_demibold}"
				                  FontSize="12" BorderThickness="0" VerticalContentAlignment="Center" VerticalAlignment="Center">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border Background="{TemplateBinding Background}">
                                                    <ContentPresenter/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                        </ListView>
                    </StackPanel>
                    <StackPanel Grid.Column="1" x:Name="GridView_or_ListView_btn" VerticalAlignment="Center" Height="50">
                        <!--<Button Background="#73a6e2" Height="35" Width="100" Margin="10" Click="GridOrListView_Click" BorderThickness="0" Foreground="White" >
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="20"/>
                                    <Setter Property="Cursor" Value="Hand" />
                                </Style>
                            </Button.Resources>
                            <DockPanel VerticalAlignment="Center">
                                <Image x:Name="GridView_or_ListView_image" Source="/html/imports/webfonts/iconfont/listview2x.png" Height="16"/>
                                //<TextBlock x:Name="GridView_or_ListView_image" Text="&#xe90; " FontFamily="{StaticResource ram_icons}" FontSize="10" VerticalAlignment="Center"/>
                                <TextBlock x:Name="GridView_or_ListView_text" Text=" List View" FontFamily="{StaticResource poppins_demibold}" FontSize="12" VerticalAlignment="Center"/>
                            </DockPanel>
                        </Button>-->
                    </StackPanel>
                </Grid>


                <!--<DockPanel Grid.Column="4">
                    <Button x:Name="export_btn" Grid.Column="3" Style="{StaticResource ButtonShadow}" BorderBrush="AntiqueWhite" BorderThickness="0.2"
                            ToolTip="{DynamicResource MainMenuExport}" Typography.Capitals="AllSmallCaps" Click="Export_Clicked">
                        <DockPanel VerticalAlignment="Center">
                            <TextBlock Text="&#xf56e;" FontFamily="{StaticResource fa_solid}" FontSize="10" Margin="0, 0, 3, 0" VerticalAlignment="Center"></TextBlock>
                            <TextBlock Text="{DynamicResource MainMenuExport}" FontFamily="{StaticResource poppins_light}" VerticalAlignment="Center" FontSize="10"/>
                        </DockPanel>
                    </Button>
                    <Button x:Name="write_btn" Style="{StaticResource ButtonShadow}" BorderBrush="AntiqueWhite" BorderThickness="0.2" 
                            ToolTip="{DynamicResource MainMenuWrite}" Typography.Capitals="AllSmallCaps" Click="Write_Clicked">
                        <DockPanel VerticalAlignment="Center">
                            <TextBlock Text="&#xf31c;" FontFamily="{StaticResource fa_solid}" FontSize="10" Margin="0, 0, 3, 0" VerticalAlignment="Center"></TextBlock>
                            <TextBlock Text="{DynamicResource MainMenuWrite}" FontFamily="{StaticResource poppins_light}" VerticalAlignment="Center" FontSize="10"/>
                        </DockPanel>
                    </Button>
                </DockPanel>
                <DockPanel Grid.Column="5">
                    <Button x:Name="log_btn" ToolTip="{DynamicResource MainMenuLog}" Click="New_Clicked" BorderThickness="0">
                        <TextBlock Text="&#xe59a;" FontFamily="{StaticResource fa_solid}" FontSize="36" VerticalAlignment="Bottom"></TextBlock>
                    </Button>
                </DockPanel>
                <DockPanel Grid.Column="6">
                    <Button x:Name="clock_btn" ToolTip="{DynamicResource MainMenuClock}" Click="New_Clicked" BorderThickness="0">
                        <TextBlock Text="&#xf017;" FontFamily="{StaticResource fa_solid}" FontSize="36" VerticalAlignment="Bottom"></TextBlock>
                    </Button>
                </DockPanel>
                <DockPanel Grid.Column="7">
                    <Button x:Name="verify_btn" ToolTip="{DynamicResource MainMenuVerify}" BorderThickness="0">
                        <TextBlock Text="&#xf772;" FontFamily="{StaticResource fa_solid}" FontSize="36" VerticalAlignment="Bottom"></TextBlock>
                    </Button>
                </DockPanel>-->

                <!--<Grid Grid.Column="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button x:Name="minimize_btn" ToolTip="{DynamicResource MainMenuToTray}" Click="Button_Minimize_Click" BorderThickness="1, 0, 0, 1">
                        <TextBlock Text="&#xf2d1;" FontFamily="{StaticResource fa_solid}" FontSize="24" VerticalAlignment="Bottom"></TextBlock>
                    </Button>
                    <DockPanel Grid.Row="1">
                        <Button x:Name="changeTheme_btn" ToolTip="{DynamicResource MainMenuTheme}" Click="ChangeTheme_Click" BorderThickness="0">
                            <TextBlock Text="&#xf042;" FontFamily="{StaticResource fa_solid}" FontSize="36"/>
                        </Button>
                    </DockPanel>
                </Grid>
                <Grid Grid.Column="11">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Button Grid.Row="0" x:Name="maximize_btn" ToolTip="{DynamicResource MainMenuRestore}" Click="Button_Maximize_Click" BorderThickness="0, 0, 0, 1">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger 
									Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
									Value="Maximized">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <TextBlock Text="&#xf2d0;" FontFamily="{StaticResource fa_solid}" FontSize="24" VerticalAlignment="Bottom"></TextBlock>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger 
									Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
									Value="Normal">
                                        <Setter Property="Content">
                                            <Setter.Value>
                                                <TextBlock Text="&#xf2d2;" FontFamily="{StaticResource fa_solid}" FontSize="24" VerticalAlignment="Bottom"></TextBlock>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <DockPanel Grid.Row="1">
                        <Button x:Name="update_btn" ToolTip="{DynamicResource MainMenuUpdate}" BorderThickness="0">
                            <TextBlock Text="&#xe4c2;" FontFamily="{StaticResource fa_solid}" FontSize="36" VerticalAlignment="Bottom"></TextBlock>
                        </Button>
                    </DockPanel>
                </Grid>-->

            </Grid>
            <GridSplitter Grid.Row="1" Background="{StaticResource SideBar_Nav}" Height="2" Width="{Binding Width}"/>
            <Grid x:Name="gridBrowsers" Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="wb1Column" Width="281" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="editBtnRow" Height="0" />
                        <RowDefinition Height="*" />
                        <RowDefinition x:Name="settingsBtnRow" Height="0" />
                        <RowDefinition x:Name="defineSizeBtnRow" Height="0" />
                        <RowDefinition x:Name="footerBtnRow" Height="63"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Background="{StaticResource SideBar_Nav}">
                        <Button x:Name="write_hidden_btn" Style="{StaticResource ButtonShadow}" Background="White" BorderBrush="AntiqueWhite" BorderThickness="0.2" Width="54"
                                ToolTip="{DynamicResource MainMenuWrite}" Click="Write_Clicked" HorizontalContentAlignment="Center"
                                MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                            <TextBlock x:Name="edit_hidden_icon" Text="&#xe902;" FontFamily="{StaticResource ram_icons}" FontSize="15" Foreground="Gray"/>
                        </Button>
                    </Grid>
                    <wpf:ChromiumWebBrowser
				        Grid.Row="1"
				        x:Name="wb1"
                        MinWidth="{Binding MinWidth}"
				        Background="Transparent"
				        Margin="0, 0, 0, 0"
				        Padding="0, 0, 0, 50"
				        JavascriptMessageReceived="wb_PostMessage"
				    />
                    <Grid Grid.Row="2" Background="{StaticResource SideBar_Nav}">
                        <Button x:Name="settings_hidden_btn" Style="{StaticResource ButtonShadow}" Background="White" BorderBrush="AntiqueWhite" BorderThickness="0.2" Width="44" Height="44"
                                ToolTip="{DynamicResource MainMenuSettings}" Click="SettingsClicked" HorizontalContentAlignment="Center"
                                MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                            <TextBlock x:Name="settings_hidden_icon" Text="&#xe903;" FontFamily="{StaticResource ram_icons}" FontSize="20" Foreground="Gray" />
                        </Button>
                    </Grid>

                    <Grid Grid.Row="3" Background="{StaticResource SideBar_Nav}">
                        <Button x:Name="define_size_hidden_btn" Width="30" Height="30" Background="Transparent" BorderBrush="Transparent" 
                                Click="wb1Size_Click" Cursor="Hand">
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource HalfConverter}}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </Button.Resources>
                            <TextBlock Text="&#xe916;" FontFamily="{StaticResource ram_icons}" FontSize="15" Foreground="Gray"/>
                        </Button>
                    </Grid>

                    <Grid Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="footerBtnCol1" Width="10"/>
                            <ColumnDefinition x:Name="footerBtnCol2" Width="8*"/>
                            <ColumnDefinition x:Name="footerBtnCol3" Width="6*"/>
                            <ColumnDefinition x:Name="footerBtnCol4" Width="4*"/>
                            <ColumnDefinition x:Name="footerBtnCol5" Width="4*"/>
                            <ColumnDefinition x:Name="footerBtnCol6" Width="4*"/>
                        </Grid.ColumnDefinitions>

                        <Button x:Name="settings_btn" Grid.Column="1" Style="{StaticResource ButtonShadow}" BorderBrush="AntiqueWhite" BorderThickness="0.2"
                                Height="35" ToolTip="{DynamicResource MainMenuSettings}" Click="SettingsClicked"
                                MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                            <DockPanel>
                                <TextBlock x:Name="settings_icon" Text="&#xe903;" FontFamily="{StaticResource ram_icons}" FontSize="14" Margin="0, 0, 5, 0" />
                                <TextBlock Text="{library:DynamicResourceBinding MainMenuSettings, Converter={StaticResource StringToUpperConverter}}" 
                                           FontFamily="{StaticResource poppins_demibold}" FontSize="10" />
                            </DockPanel>
                        </Button>

                        <Button x:Name="help_btn" Grid.Column="2" Style="{StaticResource ButtonShadow}" BorderBrush="AntiqueWhite" BorderThickness="0.2"
                                Height="35" ToolTip="{DynamicResource MainMenuHelp}" 
                                MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" >
                            <DockPanel>
                                <TextBlock x:Name="help_icon" Text="&#xe904;" FontFamily="{StaticResource ram_icons}" FontSize="14" Margin="0, 0, 5, 0" />
                                <TextBlock Text="{library:DynamicResourceBinding MainMenuHelp, Converter={StaticResource StringToUpperConverter}}" 
                                           FontFamily="{StaticResource poppins_demibold}" FontSize="10" VerticalAlignment="Center" />
                            </DockPanel>
                        </Button>

                        <Button x:Name="exit_btn" Grid.Column="3" ToolTip="{DynamicResource MainMenuExit}" 
                                Typography.Capitals="AllSmallCaps" Width="35" Height="35" Click="Exit_Clicked" 
                                Background="LightGray" Foreground="White" BorderThickness="0" 
                                MouseEnter="Button_MouseEnter" MouseLeave="Button_MouseLeave" Cursor="Hand" >
                           <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource HalfConverter}}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </Button.Resources>
                            <TextBlock x:Name="log_out_img" Text="&#xe905;" FontFamily="{StaticResource ram_icons}" FontSize="14" Margin="0, 0, 3, 0" 
                                VerticalAlignment="Center" Foreground="White" Background="#cbcbcb"/>
                        </Button>

                        <DockPanel x:Name="languagesPanel" Grid.Column="4" Height="114" Background="Transparent">
                            <uc:LanguageControl x:Name="languageButton" HorizontalAlignment="Center" Width="35" Margin="0,0,0,50" Cursor="Hand"/>
                        </DockPanel>

                        <Button Grid.Column="5" x:Name="define_size_btn" Width="35" Height="35" Background="Transparent" BorderBrush="Transparent" 
                                Click="wb1Size_Click" Cursor="Hand" >
                            <Button.Resources>
                                <Style TargetType="Border">
                                    <Setter Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType={x:Type Button}}, Converter={StaticResource HalfConverter}}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                </Style>
                            </Button.Resources>
                            <TextBlock Text="&#xe915;" FontFamily="{StaticResource ram_icons}" FontSize="15" Foreground="Gray"/>
                        </Button>
                    </Grid>

                </Grid>
                <wpf:ChromiumWebBrowser
				    Grid.Column="2"
				    x:Name="wb2"
				    Margin="{Binding Margin}"                
				    JavascriptMessageReceived="wb_PostMessage"
				    Background="Transparent"
                    Panel.ZIndex="99"
			    />
            </Grid>
            <!--<StackPanel Grid.Row="6" x:Name="grid6" VerticalAlignment="Stretch">
                <TextBlock x:Name="textblock_bottom"  FontSize="14" HorizontalAlignment="Center" VerticalAlignment="Center" 
				TextWrapping="Wrap"><Run Text="{DynamicResource MainMenuCopyright}"/><Run FontWeight="Bold" Text="{DynamicResource MainMenuTE}"/></TextBlock>
                <ProgressBar x:Name="progressBar1" HorizontalAlignment="Right" Width="400" Height="20" Panel.ZIndex="2" Background="Transparent" BorderThickness="0"/>
            </StackPanel>-->
        </Grid>
    </Border>
</Window>
